From 5f0875b4f43bbb68fce0144e8dc7bf11c0f9ee7c Mon Sep 17 00:00:00 2001
From: Noel Kuntze <noel.kuntze@thermi.consulting>
Date: Tue, 18 Aug 2020 20:30:09 +0200
Subject: [PATCH 08/31] common: heed setlocale's return value being defined
 immutable

Operate on stack instead of returned pointer in forceUTF8Locale.

[POSIX.1-2017 says """The application shall not modify the string
returned."""]
---
 common/charset/localeutil.cpp | 13 +++++++------
 1 file changed, 7 insertions(+), 6 deletions(-)

diff --git a/common/charset/localeutil.cpp b/common/charset/localeutil.cpp
index 57123d9b7..b16753018 100644
--- a/common/charset/localeutil.cpp
+++ b/common/charset/localeutil.cpp
@@ -53,12 +53,13 @@ exit:
 bool forceUTF8Locale(bool bOutput, std::string *lpstrLastSetLocale)
 {
 	std::string new_locale;
-	char *old_locale = setlocale(LC_CTYPE, "");
-	if (!old_locale) {
+	char *orig_locale = setlocale(LC_CTYPE, ""), old_locale[512];
+	if (orig_locale == nullptr) {
 		if (bOutput)
 			std::cerr << "Unable to initialize locale" << std::endl;
 		return false;
 	}
+	strncpy(old_locale, orig_locale, sizeof(old_locale));
 	char *dot = strchr(old_locale, '.');
 	if (dot) {
 		*dot = '\0';
@@ -75,14 +76,14 @@ bool forceUTF8Locale(bool bOutput, std::string *lpstrLastSetLocale)
 	new_locale = std::string(old_locale) + ".UTF-8";
 	if (lpstrLastSetLocale)
 		*lpstrLastSetLocale = new_locale;
-	old_locale = setlocale(LC_CTYPE, new_locale.c_str());
-	if (!old_locale) {
+	orig_locale = setlocale(LC_CTYPE, new_locale.c_str());
+	if (orig_locale == nullptr) {
 		new_locale = "en_US.UTF-8";
 		if (lpstrLastSetLocale)
 			*lpstrLastSetLocale = new_locale;
-		old_locale = setlocale(LC_CTYPE, new_locale.c_str());
+		orig_locale = setlocale(LC_CTYPE, new_locale.c_str());
 	}
-	if (!old_locale) {
+	if (orig_locale == nullptr) {
 		if (bOutput)
 			std::cerr << "Unable to set locale '" << new_locale << "'" << std::endl;
 		return false;
-- 
2.29.2

