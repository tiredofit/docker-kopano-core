From cd249fcd3338c5905d472a3466fd052d6a9e27d1 Mon Sep 17 00:00:00 2001
From: Jan Engelhardt <jengelh@inai.de>
Date: Wed, 2 Dec 2020 18:46:16 +0100
Subject: [PATCH 25/31] statsd: reduce size of huge stack frames

164416->80	static	sd_check_sockets
---
 ECtools/statsd.cpp | 26 +++++++++++++-------------
 1 file changed, 13 insertions(+), 13 deletions(-)

diff --git a/ECtools/statsd.cpp b/ECtools/statsd.cpp
index 0375e9797..d2fd7bae6 100644
--- a/ECtools/statsd.cpp
+++ b/ECtools/statsd.cpp
@@ -166,27 +166,27 @@ static void sd_check_sockets(std::vector<struct pollfd> &pollfd)
 	for (size_t i = 0; i < pollfd.size(); ++i) {
 		if (!(pollfd[i].revents & POLLIN))
 			continue;
-		struct soap x;
+		auto x = std::make_unique<soap>();
 		int domain = AF_UNSPEC;
 		socklen_t dlen = sizeof(domain);
 		if (getsockopt(pollfd[i].fd, SOL_SOCKET, SO_DOMAIN, &domain, &dlen) == 0 &&
 		    domain != AF_LOCAL) {
-			x.master = pollfd[i].fd;
-			soap_accept(&x);
-			x.master = -1;
+			x->master = pollfd[i].fd;
+			soap_accept(x.get());
+			x->master = -1;
 		} else {
-			socklen_t peerlen = sizeof(x.peer.addr);
-			x.socket = accept(pollfd[i].fd, &x.peer.addr, &peerlen);
-			x.peerlen = peerlen;
-			if (x.socket == SOAP_INVALID_SOCKET ||
-			    peerlen > sizeof(x.peer.storage)) {
-				x.peerlen = 0;
-				memset(&x.peer, 0, sizeof(x.peer));
+			socklen_t peerlen = sizeof(x->peer.addr);
+			x->socket = accept(pollfd[i].fd, &x->peer.addr, &peerlen);
+			x->peerlen = peerlen;
+			if (x->socket == SOAP_INVALID_SOCKET ||
+			    peerlen > sizeof(x->peer.storage)) {
+				x->peerlen = 0;
+				memset(&x->peer, 0, sizeof(x->peer));
 			}
 			/* Do like gsoap's soap_accept would */
-			x.keep_alive = -(((x.imode | x.omode) & SOAP_IO_KEEPALIVE) != 0);
+			x->keep_alive = -(((x->imode | x->omode) & SOAP_IO_KEEPALIVE) != 0);
 		}
-		sd_handle_request(std::move(x));
+		sd_handle_request(std::move(*x));
 	}
 }
 
-- 
2.29.2

