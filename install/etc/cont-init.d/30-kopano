#!/usr/bin/with-contenv bash

source /assets/functions/00-container
prepare_service

PROCESS_NAME="kopano"

mkdir -p "${CONFIG_PATH}"
sanity_var INSTALL_ID "Installation ID"
configure_install_id
configure_logging

### Autorespond Config
if var_true "${ENABLE_AUTORESPOND}" ; then
	configure_autorespond
fi

### Backup Config
if var_true "${ENABLE_BACKUP}" ; then
	configure_backup
fi

### Calendar Config
if var_true "${ENABLE_CALENDAR}" ; then
	configure_calendar
fi

### DAgent Config
if var_true "${ENABLE_DAGENT}" ; then
	configure_dagent
fi

### Gateway Config
if var_true "${ENABLE_GATEWAY}" ; then
	configure_gateway
else
    service_stop 32-kopano-gateway
fi

### ICAL Config
if var_true "${ENABLE_ICAL}" ; then
	configure_ical
else
	service_stop 34-kopano-ical
fi

### KAPI Config
if var_true "${ENABLE_KAPI}" ; then
	configure_kapi
fi

### KDAV Config
if var_true "${ENABLE_KDAV}" ; then
	configure_kdav
fi

### Konnect Config
if var_true "${ENABLE_KONNECT}" ; then
	configure_konnect
else
	service_stop 44-konnect
fi

### Meet Config
if var_true "${ENABLE_MEET}" ; then
	configure_meet
else
	service_stop 41-grapi
	service_stop 42-kopano-api
	service_stop 43-kopano-kwmserverd
fi

### Monitor Config
if var_true "${ENABLE_MONITOR}" ; then
	configure_monitor
else
	service_stop 37-kopano-monitor
fi

### Search Config
if var_true "${ENABLE_SEARCH}" ; then
	configure_search
else
	service_stop 36-kopano-search
fi

### Server Config
if var_true "${ENABLE_SERVER}" ; then
	sanity_db
	db_ready mariadb
	create_user_scripts
	configure_cron_purge_deleted
	configure_server
else
	service_stop 30-kopano-server
    service_stop 90-post-startup-routines
fi

### SPAMD Config
if var_true "${ENABLE_SPAMD}" ; then
	configure_spamd
else
	service_stop 35-kopano-spamd
fi

### Spooler Config
if var_true "${ENABLE_SPOOLER}" ; then
	configure_spooler
else
	service_stop 31-kopano-spooler
fi

### Webapp Config
if var_true "${ENABLE_WEBAPP}" ; then
	configure_webapp
	if var_true "${WEBAPP_ENABLE_PLUGINS}" ; then
		configure_webapp_plugins
	fi
fi

### Z-Push Config
if var_true "${ENABLE_ZPUSH}" ; then
	configure_zpush
	create_zpush_templates
fi

### Copy custom files overtop of the root directory
if [ -d "/assets/custom/" ] ; then
	print_debug "Copying Custom Assets"
	cp -R /assets/custom/* /
fi

liftoff
